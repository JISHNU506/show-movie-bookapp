{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pjish\\\\OneDrive\\\\Desktop\\\\Book_My_Show_Front_End-SANDY\\\\src\\\\components\\\\signup.js\",\n  _s = $RefreshSig$();\nimport FormInput from \"./FormInput\";\nimport { useState } from \"react\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SignUp() {\n  _s();\n  const [values, setValues] = useState({\n    username: \"\",\n    email: \"\",\n    birthday: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const inputs = [{\n    id: 1,\n    name: \"username\",\n    type: \"text\",\n    placeholder: \"Username\",\n    errorMessage: \"Username should be 3-16 characters and shouldn't include any special character!\",\n    label: \"Username\",\n    pattern: \"^[A-Za-z0-9]{3,16}$\",\n    required: true\n  }, {\n    id: 2,\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Email\",\n    errorMessage: \"It should be a valid email address!\",\n    label: \"Email\",\n    required: true\n  }, {\n    id: 4,\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    errorMessage: \"Password should be 8-20 characters and include at least 1 letter, 1 number and 1 special character!\",\n    label: \"Password\",\n    pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$`,\n    required: true\n  }, {\n    id: 5,\n    name: \"confirmPassword\",\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    errorMessage: \"Passwords don't match!\",\n    label: \"Confirm Password\",\n    pattern: values.password,\n    required: true\n  }];\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n  const onChange = e => {\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value\n    });\n  };\n  // console.log(\"login===>\",values); \n  localStorage.setItem(\"fromdat\", values);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formapp\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), inputs.map(input => /*#__PURE__*/_jsxDEV(FormInput, {\n          ...input,\n          value: values[input.name],\n          onChange: onChange\n        }, input.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 2\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 2\n    }, this)\n  }, void 0, false);\n}\n_s(SignUp, \"DhnCC+7Eo1KOHKakQV9XBtmYOXA=\");\n_c = SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["FormInput","useState","SignUp","values","setValues","username","email","birthday","password","confirmPassword","inputs","id","name","type","placeholder","errorMessage","label","pattern","required","handleSubmit","e","preventDefault","onChange","target","value","localStorage","setItem","map","input"],"sources":["C:/Users/pjish/OneDrive/Desktop/Book_My_Show_Front_End-SANDY/src/components/signup.js"],"sourcesContent":["import FormInput from \"./FormInput\";\r\nimport { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport default function SignUp() {\r\n\r\n  const [values, setValues] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    birthday: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const inputs = [\r\n    {\r\n      id: 1,\r\n      name: \"username\",\r\n      type: \"text\",\r\n      placeholder: \"Username\",\r\n      errorMessage:\r\n        \"Username should be 3-16 characters and shouldn't include any special character!\",\r\n      label: \"Username\",\r\n      pattern: \"^[A-Za-z0-9]{3,16}$\",\r\n      required: true,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"email\",\r\n      type: \"email\",\r\n      placeholder: \"Email\",\r\n      errorMessage: \"It should be a valid email address!\",\r\n      label: \"Email\",\r\n      required: true,\r\n    },\r\n\r\n    {\r\n      id: 4,\r\n      name: \"password\",\r\n      type: \"password\",\r\n      placeholder: \"Password\",\r\n      errorMessage:\r\n        \"Password should be 8-20 characters and include at least 1 letter, 1 number and 1 special character!\",\r\n      label: \"Password\",\r\n      pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$`,\r\n      required: true,\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"confirmPassword\",\r\n      type: \"password\",\r\n      placeholder: \"Confirm Password\",\r\n      errorMessage: \"Passwords don't match!\",\r\n      label: \"Confirm Password\",\r\n      pattern: values.password,\r\n      required: true,\r\n    },\r\n  ];\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n\r\n  };\r\n  // console.log(\"login===>\",values); \r\n  localStorage.setItem(\"fromdat\", values);\r\n\r\n\r\n\r\n\r\n  return (\r\n <>\r\n <div className=\"formapp\">\r\n <form onSubmit={handleSubmit}>\r\n        <h1>Register</h1>\r\n        {inputs.map((input) => (\r\n          <FormInput\r\n            key={input.id}\r\n            {...input}\r\n            value={values[input.name]}\r\n            onChange={onChange}\r\n          />\r\n        ))}\r\n        <button>Submit</button>\r\n      </form>\r\n      </div>\r\n </>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,aAAa;AACnC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,aAAa;AAAC;AAAA;AAErB,eAAe,SAASC,MAAM,GAAG;EAAA;EAE/B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGH,QAAQ,CAAC;IACnCI,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAE;EACnB,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAG,CACb;IACEC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE,MAAM;IACZC,WAAW,EAAE,UAAU;IACvBC,YAAY,EACV,iFAAiF;IACnFC,KAAK,EAAE,UAAU;IACjBC,OAAO,EAAE,qBAAqB;IAC9BC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEP,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE,OAAO;IACbC,WAAW,EAAE,OAAO;IACpBC,YAAY,EAAE,qCAAqC;IACnDC,KAAK,EAAE,OAAO;IACdE,QAAQ,EAAE;EACZ,CAAC,EAED;IACEP,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE,UAAU;IAChBC,WAAW,EAAE,UAAU;IACvBC,YAAY,EACV,qGAAqG;IACvGC,KAAK,EAAE,UAAU;IACjBC,OAAO,EAAG,sEAAqE;IAC/EC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEP,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,iBAAiB;IACvBC,IAAI,EAAE,UAAU;IAChBC,WAAW,EAAE,kBAAkB;IAC/BC,YAAY,EAAE,wBAAwB;IACtCC,KAAK,EAAE,kBAAkB;IACzBC,OAAO,EAAEd,MAAM,CAACK,QAAQ;IACxBU,QAAQ,EAAE;EACZ,CAAC,CACF;EAED,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;EACpB,CAAC;EAED,MAAMC,QAAQ,GAAIF,CAAC,IAAK;IACtBhB,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAE,CAACiB,CAAC,CAACG,MAAM,CAACX,IAAI,GAAGQ,CAAC,CAACG,MAAM,CAACC;IAAM,CAAC,CAAC;EAE3D,CAAC;EACD;EACAC,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEvB,MAAM,CAAC;EAKvC,oBACD;IAAA,uBACA;MAAK,SAAS,EAAC,SAAS;MAAA,uBACxB;QAAM,QAAQ,EAAEgB,YAAa;QAAA,wBACtB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAiB,EAChBT,MAAM,CAACiB,GAAG,CAAEC,KAAK,iBAChB,QAAC,SAAS;UAAA,GAEJA,KAAK;UACT,KAAK,EAAEzB,MAAM,CAACyB,KAAK,CAAChB,IAAI,CAAE;UAC1B,QAAQ,EAAEU;QAAS,GAHdM,KAAK,CAACjB,EAAE;UAAA;UAAA;UAAA;QAAA,QAKhB,CAAC,eACF;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAuB;MAAA;QAAA;QAAA;QAAA;MAAA;IAClB;MAAA;MAAA;MAAA;IAAA;EACD,iBACR;AAEJ;AAAC,GAvFuBT,MAAM;AAAA,KAANA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}